name: release
on:
  push:
    paths:
    - 'mods/**'
    branches:
    - main
  workflow_dispatch:
jobs:
  build:
    runs-on: ubuntu-latest
    steps:
    - name: Checkout
      uses: actions/checkout@v2
    - uses: actions/setup-node@v1
      with:
        node-version: '14.x'
    - name: Get the version
      id: get_version
      run: echo ::set-output name=VERSION::$(node -e "console.log(require('./lerna.json').version)")
    - run: |
        npm config set unsafe-perm true
        npm install lerna -g
        npm install
        npm run bootstrap
        npm run build
    - name: Login Dockerhub
      uses: docker/login-action@v1
      with:
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
    - name: Publishing MediaServer Service
      uses: benc-uk/workflow-dispatch@v1
      with:
        workflow: publish to docker hub
        repo: fonoster/mediaserver
        token: ${{ secrets.GH_PAT }}
        ref: main
        inputs: '{"version": "${{ steps.get_version.outputs.VERSION }}" }'
    #- name: Publishing RTPEngine Service
    #  uses: benc-uk/workflow-dispatch@v1
    #  with:
    #    workflow: publish to docker hub
    #    repo: fonoster/rtpengine
    #    token: ${{ secrets.GH_PAT }}
    #    ref: main
    #    inputs: '{"version": "${{ steps.get_version.outputs.VERSION }}" }'
    - name: Publishing JWTHelper Service
      uses: benc-uk/workflow-dispatch@v1
      with:
        workflow: publish to docker hub
        repo: fonoster/jwt-helper
        token: ${{ secrets.GH_PAT }}
        ref: main
        inputs: '{"version": "${{ steps.get_version.outputs.VERSION }}" }'
    - name: Publishing GRPC Gateway
      uses: benc-uk/workflow-dispatch@v1
      with:
        workflow: publish to docker hub
        repo: fonoster/grpc-gateway
        token: ${{ secrets.GH_PAT }}
        ref: main
        inputs: '{"version": "${{ steps.get_version.outputs.VERSION }}" }'        
    - name: Copy and Push Traefik image
      uses: akhilerm/tag-push-action@v2.0.0
      with:
        src: docker.io/traefik:v2.4
        dst: |
          docker.io/fonoster/traefik:${{ steps.get_version.outputs.VERSION }}
    - name: Copy and Push Fluentd with Elasticsearch Plugin
      uses: akhilerm/tag-push-action@v2.0.0
      with:
        src: fonoster/fluent:latest
        dst: |
          docker.io/fonoster/fluent:${{ steps.get_version.outputs.VERSION }}
    - name: Copy and Push Vault
      uses: akhilerm/tag-push-action@v2.0.0
      with:
        src: docker.io/library/vault:1.13.3
        dst: |
          docker.io/fonoster/vault:${{ steps.get_version.outputs.VERSION }}                
    - name: Copy and Push Elasticsearch
      uses: akhilerm/tag-push-action@v2.0.0
      with:
        src: elasticsearch:7.16.3
        dst: |
          docker.io/fonoster/elasticsearch:${{ steps.get_version.outputs.VERSION }}          
    - name: Copy and Push Whoami image
      uses: akhilerm/tag-push-action@v2.0.0
      with:
        src: docker.io/containous/whoami:latest
        dst: |
          docker.io/fonoster/whoami:${{ steps.get_version.outputs.VERSION }}
    - name: Copy and Push Minio image
      uses: akhilerm/tag-push-action@v2.0.0
      with:
        src: docker.io/minio/minio:RELEASE.2020-02-27T00-23-05Z
        dst: |
          docker.io/fonoster/minio:${{ steps.get_version.outputs.VERSION }}
    - name: Copy and Push Redis image
      uses: akhilerm/tag-push-action@v2.0.0
      with:
        src: docker.io/redis:6.0.3-alpine
        dst: |
          docker.io/fonoster/redis:${{ steps.get_version.outputs.VERSION }}
    - name: Copy and Push RTPEngine image
      uses: akhilerm/tag-push-action@v2.0.0
      with:
        src: docker.io/fonoster/rtpengine:20211114
        dst: |
          docker.io/fonoster/rtpengine:${{ steps.get_version.outputs.VERSION }}
    - name: Copy and Push Routr image
      uses: akhilerm/tag-push-action@v2.0.0
      with:
        src: docker.io/fonoster/routr:1.2.6
        dst: |
          docker.io/fonoster/routr:${{ steps.get_version.outputs.VERSION }}
    - name: Copy and Push Rox as Voice image
      uses: akhilerm/tag-push-action@v2.0.0
      with:
        src: docker.io/fonoster/rox:0.3.7
        dst: |
          docker.io/fonoster/voice:${{ steps.get_version.outputs.VERSION }}
    - name: Copy and Push Autoheal
      uses: akhilerm/tag-push-action@v2.0.0
      with:
        src: docker.io/willfarrell/autoheal:latest
        dst: |
          docker.io/fonoster/autoheal:${{ steps.get_version.outputs.VERSION }}
    - name: Copy and Push Healthcheck
      uses: akhilerm/tag-push-action@v2.0.0
      with:
        src: docker.io/fonoster/healthcheck:latest
        dst: |
          docker.io/fonoster/healthcheck:${{ steps.get_version.outputs.VERSION }}             
    - name: Publish to Docker Hub the Fonoster installer
      uses: elgohr/Publish-Docker-Github-Action@v5
      env:
        FONOSTER_VERSION: ${{ steps.get_version.outputs.VERSION }}
        BRANCH: main
      with:
        name: fonoster/fonoster
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        tags: "latest, ${{ steps.get_version.outputs.VERSION }}"
        buildargs: FONOSTER_VERSION,BRANCH
    - name: Publish to Docker Hub the Apps API
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: fonoster/apps
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        workdir: mods/apps
        tags: "latest, ${{ steps.get_version.outputs.VERSION }}"        
    - name: Publish to Docker Hub the Projects API
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: fonoster/projects
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        workdir: mods/projects
        tags: "latest, ${{ steps.get_version.outputs.VERSION }}"
    - name: Publish to Docker Hub the Monitor API
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: fonoster/monitor
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        workdir: mods/monitor
        tags: "latest, ${{ steps.get_version.outputs.VERSION }}"        
    - name: Publish to Docker Hub the Users API
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: fonoster/users
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        workdir: mods/users
        tags: "latest, ${{ steps.get_version.outputs.VERSION }}"        
    - name: Publish to Docker Hub the Secrets API 
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: fonoster/secrets
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        workdir: mods/secrets
        tags: "latest, ${{ steps.get_version.outputs.VERSION }}"        
    - name: Publish to Docker Hub the Funcs API 
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: fonoster/funcs
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        workdir: mods/funcs
        tags: "latest, ${{ steps.get_version.outputs.VERSION }}"
    - name: Publish to Docker Hub the Agents API 
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: fonoster/agents
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        workdir: mods/agents
        tags: "latest, ${{ steps.get_version.outputs.VERSION }}"
    - name: Publish to Docker Hub the Domains API 
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: fonoster/domains
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        workdir: mods/domains
        tags: "latest, ${{ steps.get_version.outputs.VERSION }}"
    - name: Publish to Docker Hub the Numbers API
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: fonoster/numbers
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        workdir: mods/numbers
        tags: "latest, ${{ steps.get_version.outputs.VERSION }}"
    - name: Publish to Docker Hub the Providers API
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: fonoster/providers
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        workdir: mods/providers
        tags: "latest, ${{ steps.get_version.outputs.VERSION }}"
    - name: Publish to Docker Hub the Storage API
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: fonoster/storage
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        workdir: mods/storage
        tags: "latest, ${{ steps.get_version.outputs.VERSION }}"
    - name: Publish to Docker Hub the CallManager API
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: fonoster/callmanager
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        workdir: mods/callmanager
        tags: "latest, ${{ steps.get_version.outputs.VERSION }}"
    - name: Publish to Docker Hub the Limiter API
      uses: elgohr/Publish-Docker-Github-Action@master
      with:
        name: fonoster/limiter
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        workdir: mods/limiter
        tags: "latest, ${{ steps.get_version.outputs.VERSION }}"        
    - name: Publish to Docker Hub the Auth API
      uses: elgohr/Publish-Docker-Github-Action@v5
      with:
        name: fonoster/auth
        username: ${{ secrets.DOCKER_HUB_USERNAME }}
        password: ${{ secrets.DOCKER_HUB_PASSWORD }}
        workdir: mods/auth
        tags: "latest, ${{ steps.get_version.outputs.VERSION }}"
